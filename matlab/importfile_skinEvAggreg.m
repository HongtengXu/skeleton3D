% function [Timestamp,skinEv_onSkinPart_1,skinEv_onSkinPart_2,skinEv_onSkinPart_3,skinEv_onSkinPart_4] = importfile_skinEvAggreg(filename, startRow, endRow)
function [Timestamp, skinEv_onSkinPart_1, skinEv_onSkinPart_2, skinEv_onSkinPart_3,skinEv_onSkinPart_4, skin_part, skin_taxel] = importfile_skinEvAggreg(filename, startRow, endRow)
%IMPORTFILE Import numeric data from a text file as a matrix.
%   DATA = IMPORTFILE(FILENAME) Reads data from text file FILENAME for the
%   default selection.
%
%   DATA = IMPORTFILE(FILENAME, STARTROW, ENDROW) Reads data from rows
%   STARTROW through ENDROW of text file FILENAME.
%
% Example:
%   data = importfile('data.log', 1, 2988);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2018/07/17 12:03:54

%% Initialize variables.
delimiter = {' ','(',')'};
if nargin<=2
    startRow = 1;
    endRow = inf;
end

%% Format for each line of text:
%   column2: double (%f)
%	column3: double (%f)
%   column4: double (%f)    taxel
%	column5: double (%f)
%   column6: double (%f)
%	column7: double (%f)
%   column8: double (%f)
%	column9: double (%f)
%   column10: double (%f)
%	column11: double (%f)
%   column12: double (%f)
%	column13: double (%f)
%   column14: double (%f)
%	column15: double (%f)
%   column16: double (%f)
%	column17: double (%f)
%   column18: text (%s)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'TextType', 'string', 'EmptyValue', -1.0, 'HeaderLines', startRow(1)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'TextType', 'string', 'EmptyValue', -1.0, 'HeaderLines', startRow(block)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Create output variable
%data = table(dataArray{1:end-1}, 'VariableNames', {'VarName2','VarName3','VarName4','VarName5','VarName6','VarName7','VarName8','VarName9','VarName10','VarName11','VarName12','VarName13','VarName14','VarName15','VarName16','VarName17','VarName18'});

Timestamp = dataArray{:, 2};
skin_part = dataArray{:, 18};
skin_taxel = dataArray{:, 4};

skinEv_onSkinPart_1=[];
skinEv_onSkinPart_2=[];
skinEv_onSkinPart_3=[];
skinEv_onSkinPart_4=[];
for i=1:length(skin_part)
    if string(skin_part{i})=="l_hand"
        skinEv_onSkinPart_1 = [skinEv_onSkinPart_1;1];
        skinEv_onSkinPart_2 = [skinEv_onSkinPart_2;0];
        skinEv_onSkinPart_3 = [skinEv_onSkinPart_3;0];
        skinEv_onSkinPart_4 = [skinEv_onSkinPart_4;0];
    elseif string(skin_part{i})=="l_forearm"
        skinEv_onSkinPart_1 = [skinEv_onSkinPart_1;0]
        skinEv_onSkinPart_2 = [skinEv_onSkinPart_2;1];
        skinEv_onSkinPart_3 = [skinEv_onSkinPart_3;0];
        skinEv_onSkinPart_4 = [skinEv_onSkinPart_4;0];
    elseif string(skin_part{i})=="r_hand"
        skinEv_onSkinPart_1 = [skinEv_onSkinPart_1;0];
        skinEv_onSkinPart_2 = [skinEv_onSkinPart_2;0];
        skinEv_onSkinPart_3 = [skinEv_onSkinPart_3;1];
        skinEv_onSkinPart_4 = [skinEv_onSkinPart_4;0];
    elseif string(skin_part{i})=="r_forearm"
        skinEv_onSkinPart_1 = [skinEv_onSkinPart_1;0];
        skinEv_onSkinPart_2 = [skinEv_onSkinPart_2;0];
        skinEv_onSkinPart_3 = [skinEv_onSkinPart_3;0];
        skinEv_onSkinPart_4 = [skinEv_onSkinPart_4;1];
    else
        skinEv_onSkinPart_1 = [skinEv_onSkinPart_1;0];
        skinEv_onSkinPart_2 = [skinEv_onSkinPart_2;0];
        skinEv_onSkinPart_3 = [skinEv_onSkinPart_3;0];
        skinEv_onSkinPart_4 = [skinEv_onSkinPart_4;0];
    end
end
