function [Timestamp,head,hR,hL,eR,eL,sR,sL,sp] = importfile_keypoints(filename, startRow, endRow)
%IMPORTFILE_KEYPOINTS Import numeric data from a text file as column vectors.
%   [TIMESTAMP,HEAD, HR, HL, ER, EL, SR, SL, SP] = IMPORTFILE_KEYPOINTS(FILENAME) Reads data from text file FILENAME for the
%   default selection.
%
%   [TIMESTAMP,HEAD, HR, HL, ER, EL, SR, SL, SP] = IMPORTFILE_KEYPOINTS(FILENAME, STARTROW, ENDROW) Reads data from rows STARTROW
%   through ENDROW of text file FILENAME.
%
% Example:
%   [Timestamp,head, hR, hL, eR, eL, sR, sL, sp] = importfile_keypoints('data.log',1, 2630);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2017/09/12 18:29:02

%% Initialize variables.
delimiter = {' ','(',')'};
if nargin<=2
    startRow = 1;
    endRow = inf;
end

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
%	column8: double (%f)
%   column9: double (%f)
%	column10: double (%f)
%   column11: double (%f)
%	column12: double (%f)
%   column13: double (%f)
%	column14: double (%f)
%   column15: double (%f)
%	column16: double (%f)
%   column17: double (%f)
%	column18: double (%f)
%   column19: double (%f)
%	column20: double (%f)
%   column21: double (%f)
%	column22: double (%f)
%   column23: double (%f)
%	column24: double (%f)
%   column25: double (%f)
%	column26: double (%f)
%   column27: double (%f)
%	column28: double (%f)
%   column29: double (%f)
%	column30: double (%f)
%   column31: double (%f)
%	column32: double (%f)
%   column33: double (%f)
%	column34: double (%f)
%   column35: double (%f)
%	column36: double (%f)
%   column37: double (%f)
%	column38: double (%f)
%   column39: double (%f)
%	column40: double (%f)
%   column41: double (%f)
%	column42: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'EmptyValue' ,NaN,'HeaderLines', startRow(1)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'EmptyValue' ,NaN,'HeaderLines', startRow(block)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
VarName1 = dataArray{:, 1};
Timestamp = dataArray{:, 2};
% head_x = dataArray{:, 3};
% head_y = dataArray{:, 4};
% head_z = dataArray{:, 5};
% head_sz = dataArray{:, 6};
% head_v = dataArray{:, 7};
% hR_x = dataArray{:, 8};
% hR_y = dataArray{:, 9};
% hR_z = dataArray{:, 10};
% hR_sz = dataArray{:, 11};
% hR_v = dataArray{:, 12};
% hL_x = dataArray{:, 13};
% hL_y = dataArray{:, 14};
% hL_z = dataArray{:, 15};
% hL_sz = dataArray{:, 16};
% hL_v = dataArray{:, 17};
% eR_x = dataArray{:, 18};
% eR_y = dataArray{:, 19};
% eR_z = dataArray{:, 20};
% eR_sz = dataArray{:, 21};
% eR_v = dataArray{:, 22};
% eL_x = dataArray{:, 23};
% eL_y = dataArray{:, 24};
% eL_z = dataArray{:, 25};
% eL_sz = dataArray{:, 26};
% eL_v = dataArray{:, 27};
% sR_x = dataArray{:, 28};
% sR_y = dataArray{:, 29};
% sR_z = dataArray{:, 30};
% sR_sz = dataArray{:, 31};
% sR_v = dataArray{:, 32};
% sL_x = dataArray{:, 33};
% sL_y = dataArray{:, 34};
% sL_z = dataArray{:, 35};
% sL_sz = dataArray{:, 36};
% sL_v = dataArray{:, 37};
% sp_x = dataArray{:, 38};
% sp_y = dataArray{:, 39};
% sp_z = dataArray{:, 40};
% sp_sz = dataArray{:, 41};
% sp_v = dataArray{:, 42};

head =  [dataArray{:,3},dataArray{:,4},dataArray{:,5},dataArray{:,6},dataArray{:,7}];
hR =    [dataArray{:,8},dataArray{:,9},dataArray{:,10},dataArray{:,11},dataArray{:,12}];
hL =    [dataArray{:,13},dataArray{:,14},dataArray{:,15},dataArray{:,16},dataArray{:,17}];
eR = 	[dataArray{:,18},dataArray{:,19},dataArray{:,20},dataArray{:,21},dataArray{:,22}];
eL =    [dataArray{:,23},dataArray{:,24},dataArray{:,25},dataArray{:,26},dataArray{:,27}];
sR =    [dataArray{:,28},dataArray{:,29},dataArray{:,30},dataArray{:,31},dataArray{:,32}]; 
sL =    [dataArray{:,33},dataArray{:,34},dataArray{:,35},dataArray{:,36},dataArray{:,37}];
sp =    [dataArray{:,38},dataArray{:,39},dataArray{:,40},dataArray{:,41},dataArray{:,42}];


